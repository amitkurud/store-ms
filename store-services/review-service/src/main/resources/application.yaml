spring:
  application.name: review
  jpa:
    show-sql: true
    open-in-view: false
    database: MYSQL
    properties.hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
      # Strongly recommend to set this property to "none" or with flyway  to "validate" in a
      # production environment!
    hibernate.ddl-auto: none
  datasource:
    ## You often do not need to specify the driver-class-name,
    ## since Spring Boot can deduce it for most databases from the url.
    #driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    url: "jdbc:mysql://$***REMOVED***app.database.host***REMOVED***/review-db?useSSL=false&serverTimezone=UTC"
    username: user
    password: pwd
    hikari:
      initialization-fail-timeout: 60000
      connection-test-query: SELECT 1
      maximum-pool-size: 10
  flyway:
    #Enable or disable flyway migrations
    enabled: true
    url: "jdbc:mysql://$***REMOVED***app.database.host***REMOVED***/$***REMOVED***app.database.schema***REMOVED***?useSSL=false&serverTimezone=UTC"
    schemas: review-db
    user: $***REMOVED***spring.datasource.username***REMOVED***
    password: $***REMOVED***spring.datasource.password***REMOVED***
  rabbitmq:
    host: $***REMOVED***app.messaging.rabbitmq.host***REMOVED***
    port: 5672
    username: guest
    password: guest
  cloud:
    # As Spring Cloud Ribbon is in maintenance mode.
    # It is recommended switching to BlockingLoadBalancerClient instead.
    loadbalancer.ribbon.enabled: false
    # Event-driven messages Stream config
    stream:
      defaultBinder: rabbit
      default.contentType: application/json
      bindings.input:
          destination: reviews
          group: reviewsGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
      rabbit.bindings.input.consumer:
        autoBindDlq: true
        republishToDlq: true
      kafka:
        bindings.input.consumer.enableDlq: true
        binder:
          brokers: $***REMOVED***app.messaging.kafka.broker***REMOVED***
          defaultBrokerPort: 9092

app:
  eureka-server: localhost
  database:
    host: localhost
    schema: mysql
  messaging:
    rabbitmq.host: 127.0.0.1
    kafka.broker: 127.0.0.1

server.port: 9083

logging.level:
    web: DEBUG
    root: INFO
    com.siriusxi.ms.store: DEBUG
    org:
      hibernate:
        SQL: DEBUG
        type.descriptor.sql.BasicBinder: TRACE

management:
  info.git:
    mode: full
    enabled: true
  endpoints.web.exposure.include: "*"
  endpoint:
    shutdown.enabled: true
    health.show-details: always

# Service discovery configs
eureka:
  client:
    healthcheck.enabled: true
    service-url.defaultZone: http://$***REMOVED***app.eureka-server***REMOVED***:8761/eureka/
    initial-instance-info-replication-interval-seconds: 5
    registry-fetch-interval-seconds: 5
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 5

# This is a docker specific profile properties
# Also profiles could be separated in its owen file
# with file name format of "application-docker.yaml"
***REMOVED***
spring:
  profiles: docker
  jmx.enabled: false
  datasource:
    url: "jdbc:mysql://$***REMOVED***app.database.host***REMOVED***/$***REMOVED***app.database.schema***REMOVED***"

server.port: 8080

app:
  eureka-server: eureka
  database:
    host: mysql
    schema: review-db
  messaging:
    rabbitmq.host: rabbitmq
    kafka.broker: kafka